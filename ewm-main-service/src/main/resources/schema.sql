DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS events_compilations;
DROP TABLE IF EXISTS requests;
DROP TABLE IF EXISTS events;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS compilations;
DROP TABLE IF EXISTS categories;

CREATE TABLE users (
	id      int8            NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	email   varchar(255)    NOT NULL,
	name    varchar(255)    NOT NULL,
	CONSTRAINT email_unique UNIQUE (email),
	CONSTRAINT users_pkey PRIMARY KEY (id)
);

CREATE TABLE compilations (
	id      int8            NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	title   varchar(255)    NOT NULL,
	pinned  bool            NULL,
	CONSTRAINT compilations_pkey PRIMARY KEY (id),
	CONSTRAINT compilation_title_unique UNIQUE (title)
);

CREATE TABLE categories (
	id      int8            NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"name"  varchar(255)    NOT NULL,
	CONSTRAINT categories_pkey PRIMARY KEY (id),
	CONSTRAINT category_name_unique UNIQUE (name)
);

CREATE TABLE events (
	id                  int8            NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	annotation          varchar(2000)   NULL,
	confirmed_requests  int4            NOT NULL,
	created_on          timestamp       NULL,
	description         varchar(7000)   NULL,
	event_date          timestamp       NULL,
	paid                bool            NULL,
	participant_limit   int4            NULL,
	available           bool            NULL,
	published_on        timestamp       NULL,
	request_moderation  bool            NULL,
	state               int4            NULL,
	title               varchar(120)    NULL,
	"views"             int4            NOT NULL,
	category_id         int8            NULL,
	initiator_id        int8            NULL,
	latitude            float4          NOT NULL,
	longitude           float4          NOT NULL,
	CONSTRAINT events_pkey PRIMARY KEY (id),
	CONSTRAINT initiator_fkey FOREIGN KEY (initiator_id) REFERENCES users(id),
	CONSTRAINT category_fkey FOREIGN KEY (category_id) REFERENCES categories(id)
);

CREATE TABLE events_compilations (
	event_id        int8 NOT NULL,
	compilation_id  int8 NOT NULL,
	CONSTRAINT events_compilations_pkey PRIMARY KEY (event_id, compilation_id),
	CONSTRAINT event_fkey FOREIGN KEY (event_id) REFERENCES events(id),
	CONSTRAINT compilation_fkey FOREIGN KEY (compilation_id) REFERENCES compilations(id)
);

CREATE TABLE requests (
	id              int8        NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	created         timestamp   NOT NULL,
	event_id        int8        NULL,
	requester_id    int8        NULL,
	state           int4        NULL,
	CONSTRAINT requests_pkey PRIMARY KEY (id),
	CONSTRAINT requests_unique UNIQUE (event_id,requester_id),
	CONSTRAINT requester_fkey FOREIGN KEY (requester_id) REFERENCES users(id),
	CONSTRAINT event_fkey FOREIGN KEY (event_id) REFERENCES events(id)
);

CREATE TABLE comments (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"text" varchar(7000) NULL,
	created_on timestamp NOT NULL,
	author_id int8 NOT NULL,
	is_evidence bool NOT NULL,
	event_id int8 NOT NULL,
	is_modified bool NOT NULL,
	last_modified_on timestamp NULL,
	state int4 NOT NULL,
	CONSTRAINT comments_pkey PRIMARY KEY (id),
	CONSTRAINT event_fkey FOREIGN KEY (event_id) REFERENCES public.events(id),
	CONSTRAINT author_fkey FOREIGN KEY (author_id) REFERENCES public.users(id)
);